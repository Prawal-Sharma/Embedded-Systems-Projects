


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: ***Your Names**update this***
    3 00000000         ; Date Created: 1/22/2016 
    4 00000000         ; Last Modified: 1/22/2016 
    5 00000000         ; Section ***Tuesday 1-2***update this***
    6 00000000         ; Instructor: ***Ramesh Yerraballi**update this***
    7 00000000         ; Lab number: 3
    8 00000000         ; Brief description of the program
    9 00000000         ;   If the switch is presses, the LED toggles at 8 Hz
   10 00000000         ; Hardware connections
   11 00000000         ;  PE1 is switch input  (1 means pressed, 0 means not pr
                       essed)
   12 00000000         ;  PE0 is LED output (1 activates external LED on protob
                       oard) 
   13 00000000         ;Overall functionality of this system is the similar to 
                       Lab 2, with six changes:
   14 00000000         ;1-  the pin to which we connect the switch is moved to 
                       PE1, 
   15 00000000         ;2-  you will have to remove the PUR initialization beca
                       use pull up is no longer needed. 
   16 00000000         ;3-  the pin to which we connect the LED is moved to PE0
                       , 
   17 00000000         ;4-  the switch is changed from negative to positive log
                       ic, and 
   18 00000000         ;5-  you should increase the delay so it flashes about 8
                        Hz.
   19 00000000         ;6-  the LED should be on when the switch is not pressed
                       
   20 00000000         ; Operation
   21 00000000         ;   1) Make PE0 an output and make PE1 an input. 
   22 00000000         ;   2) The system starts with the LED on (make PE0 =1). 
                       
   23 00000000         ;   3) Wait about 62 ms
   24 00000000         ;   4) If the switch is pressed (PE1 is 1), then toggle 
                       the LED once, else turn the LED on. 
   25 00000000         ;   5) Steps 3 and 4 are repeated over and over
   26 00000000         
   27 00000000         
   28 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   29 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   30 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   31 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   32 00000000 40024528 
                       GPIO_PORTE_AMSEL_R
                               EQU              0x40024528
   33 00000000 4002452C 
                       GPIO_PORTE_PCTL_R
                               EQU              0x4002452C
   34 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608



ARM Macro Assembler    Page 2 


   35 00000000                 IMPORT           TExaS_Init
   36 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   37 00000000                 THUMB
   38 00000000                 EXPORT           Start
   39 00000000         Start
   40 00000000         ; TExaS_Init sets bus clock at 80 MHz
   41 00000000 F7FF FFFE       BL               TExaS_Init  ; voltmeter, scope 
                                                            on PD3
   42 00000004 481D            LDR              R0, =SYSCTL_RCGCGPIO_R 
                                                            ;  enable clock
   43 00000006 6801            LDR              R1, [R0]
   44 00000008 F041 0110       ORR              R1, R1, #0x10
   45 0000000C 6001            STR              R1, [R0]
   46 0000000E BF00            NOP
   47 00000010 BF00            NOP
   48 00000012         
   49 00000012         
   50 00000012 481B            LDR              R0, =GPIO_PORTE_DIR_R ; set PE0
                                                             to output and PE1 
                                                            to input
   51 00000014 6801            LDR              R1, [R0]
   52 00000016 F001 0100       AND              R1, #0x0    ; Why clear r1? 
   53 0000001A F041 0101       ORR              R1, #0x1    ; Didn't make PE1 a
                                                            n input AND R1, #0x
                                                            FD
   54 0000001E 6001            STR              R1, [R0]
   55 00000020         
   56 00000020 4818            LDR              R0, =GPIO_PORTE_DEN_R ; enable 
                                                            digital for all pin
                                                            s being used
   57 00000022 6801            LDR              R1, [R0]
   58 00000024 F041 0103       ORR              R1, #0x3
   59 00000028 6001            STR              R1, [R0]    ; you initialize PE
                                                            1 PE0
   60 0000002A         
   61 0000002A         
   62 0000002A B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
   63 0000002C         
   64 0000002C 4816            LDR              R0, =GPIO_PORTE_DATA_R
   65 0000002E 6801            LDR              R1, [R0]
   66 00000030 F041 0101       ORR              R1, #0x1
   67 00000034 6001            STR              R1, [R0]
   68 00000036 F04F 0301       MOV              R3, #1
   69 0000003A         
   70 0000003A F000 F816       BL               loop2
   71 0000003E         
   72 0000003E 4812    poll    LDR              R0, =GPIO_PORTE_DATA_R
   73 00000040 6801            LDR              R1, [R0]
   74 00000042 2902            CMP              R1, #0x2
   75 00000044 D203            BHS              loop1
   76 00000046 F041 0101       ORR              R1, #1
   77 0000004A 6001            STR              R1, [R0]
   78 0000004C E7F7            B                poll
   79 0000004E         
   80 0000004E F240 139D 
                       loop1   MOV              R3, #413    ; creating timer wi



ARM Macro Assembler    Page 3 


                                                            th SUBS operation
   81 00000052 F44F 627A 
                       more1   MOV              R2, #4000
   82 00000056 1E52    again1  SUBS             R2, R2, #1
   83 00000058 D1FD            BNE              again1
   84 0000005A 1E5B            SUBS             R3, R3, #1
   85 0000005C D1F9            BNE              more1
   86 0000005E 480A            LDR              R0, =GPIO_PORTE_DATA_R
   87 00000060 6801            LDR              R1, [R0]
   88 00000062 F081 0101       EOR              R1, #1
   89 00000066 6001            STR              R1, [R0]
   90 00000068 4770            BX               LR          ;; your input outpu
                                                            t delay
   91 0000006A         
   92 0000006A F240 139D 
                       loop2   MOV              R3, #413    ; creating timer wi
                                                            th SUBS operation
   93 0000006E F44F 627A 
                       more2   MOV              R2, #4000
   94 00000072 1E52    again2  SUBS             R2, R2, #1
   95 00000074 D1FD            BNE              again2
   96 00000076 1E5B            SUBS             R3, R3, #1
   97 00000078 D1F9            BNE              more2
   98 0000007A 4770            BX               LR          ;; your input outpu
                                                            t delay
   99 0000007C         
  100 0000007C         
  101 0000007C         
  102 0000007C         
  103 0000007C                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  104 0000007C                 END                          ; end of file
              400FE608 
              40024400 
              4002451C 
              400243FC 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: .text unused
Start 00000000

Symbol: Start
   Definitions
      At line 39 in file main.s
   Uses
      At line 38 in file main.s
Comment: Start used once
again1 00000056

Symbol: again1
   Definitions
      At line 82 in file main.s
   Uses
      At line 83 in file main.s
Comment: again1 used once
again2 00000072

Symbol: again2
   Definitions
      At line 94 in file main.s
   Uses
      At line 95 in file main.s
Comment: again2 used once
loop1 0000004E

Symbol: loop1
   Definitions
      At line 80 in file main.s
   Uses
      At line 75 in file main.s
Comment: loop1 used once
loop2 0000006A

Symbol: loop2
   Definitions
      At line 92 in file main.s
   Uses
      At line 70 in file main.s
Comment: loop2 used once
more1 00000052

Symbol: more1
   Definitions
      At line 81 in file main.s
   Uses
      At line 85 in file main.s
Comment: more1 used once
more2 0000006E

Symbol: more2



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 93 in file main.s
   Uses
      At line 97 in file main.s
Comment: more2 used once
poll 0000003E

Symbol: poll
   Definitions
      At line 72 in file main.s
   Uses
      At line 78 in file main.s
Comment: poll used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 30 in file main.s
   Uses
      None
Comment: GPIO_PORTE_AFSEL_R unused
GPIO_PORTE_AMSEL_R 40024528

Symbol: GPIO_PORTE_AMSEL_R
   Definitions
      At line 32 in file main.s
   Uses
      None
Comment: GPIO_PORTE_AMSEL_R unused
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 28 in file main.s
   Uses
      At line 64 in file main.s
      At line 72 in file main.s
      At line 86 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 56 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 29 in file main.s
   Uses
      At line 50 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTE_PCTL_R 4002452C

Symbol: GPIO_PORTE_PCTL_R
   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: GPIO_PORTE_PCTL_R unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 42 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 35 in file main.s
   Uses
      At line 41 in file main.s
Comment: TExaS_Init used once
1 symbol
349 symbols in table
